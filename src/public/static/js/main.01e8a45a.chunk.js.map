{"version":3,"sources":["assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","assets/img/read.svg","assets/img/noread.svg","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/user.js","redux/reducers/files.js","redux/reducers/index.js","redux/store.js","components/Button/index.js","components/Block/index.js","utils/helpers/validateField.js","utils/helpers/openNotification.js","components/Message/index.js","utils/helpers/convertCurrentTime.js","utils/isUserOnline.js","components/DialogItem/index.js","components/Time/index.js","components/ReadIcon/index.js","components/Dialogs/index.js","components/Avatar/index.js","utils/helpers/generateAvatarFromHash.js","components/Status/index.js","components/ChatInput/index.js","components/Messages/index.js","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","components/VerifyForm/index.js","core/socket.js","redux/actions/dialogs.js","redux/actions/messages.js","redux/actions/user.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/index.jsx","components/UploadFiles/index.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","modules/LoginForm/index.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["module","exports","initialState","items","currentDialog","firstLoaded","isLoading","data","isAuth","window","localStorage","token","combineReducers","dialogs","state","type","payload","messages","filter","message","_id","user","files","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Button","props","className","classNames","size","AuthBlock","children","key","touched","errors","text","title","duration","notification","description","AudioElem","audio","useState","isPlaying","setIsPlaying","progress","setProgress","currentTime","setCurrentTime","audioElem","useRef","useEffect","current","addEventListener","ref","src","preload","style","width","onClick","pause","play","pauseSVG","alt","playSVG","waveSvg","number","mins","Math","floor","secs","toFixed","convertCurrentTime","Message","read","id","date","isMe","onDeleteMessage","attachments","isTyping","length","isRead","content","trigger","icon","map","item","url","filename","userTime","Date","now","min","DialogItem","partner","author","userId","unread","to","isUserOnline","last_seen","fullname","dateObj","isToday","format","getMessageTime","createdAt","Time","formatDistanceToNow","addSuffix","locale","rulocale","ReadIcon","checkedSVG","notCheckedSVG","Dialogs","onSearch","inputValue","sort","a","b","console","log","Search","placeholder","onChange","e","target","value","lastMessage","image","Empty","PRESENTED_IMAGE_SIMPLE","Avatar","avatar","colors","hash","substr","split","char","charCodeAt","r","g","color","tinycolor","colorLighten","lighten","toHexString","generateAvatarFromHash","firstUserChar","toUpperCase","background","Status","online","ChatInput","onSendMessage","setValue","onKeyUp","keyCode","Messages","blockRef","currentUser","tip","axios","defaults","baseURL","location","origin","headers","common","get","partnerId","post","dialogId","delete","values","name","VerifyForm","history","search","loading","setLoading","verified","setVerified","userApi","then","catch","err","antIcon","fontSize","spin","Block","indicator","theme","push","socket","io","replace","actions","setDialogs","fetchDialogs","dispatch","dialogsApi","setCurrentDialog","setMessages","setIsLoading","bool","removeMessage","addMessage","messagesApi","removeMessageById","confirm","fetchSendMessage","getState","fetchMessages","setUserData","fetchUserData","fetchUserRegister","setSubmitting","setStatus","postData","status","openNotification","response","code","fetchUserLogin","connect","dialogsActions","Array","from","filterArray","setFilteredArray","on","dialog","toLowerCase","indexOf","messagesActions","messagesRef","removeListener","scrollTo","find","visible","setVisible","setInputValue","users","setUsers","selectedUserId","setSelectedUserId","messageText","setMessageText","onClose","onSelectUser","onChangeInput","onAddDialog","Option","Select","TextArea","Input","Sidebar","options","onOk","onCancel","okText","cancelText","confirmLoading","onSelect","notFoundContent","defaultActiveFirstOption","showArrow","filterOption","showSearch","autoSize","minRows","maxRows","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","React","Component","LoginForm","handleChange","handleBlur","handleSubmit","Item","validateStatus","validateField","hasFeedback","help","email","prefix","onBlur","password","rules","test","password2","Object","keys","forEach","withFormik","mapPropsToValues","validate","validateForm","userActions","displayName","RegisterForm","Auth","exact","path","component","withRouter","pathname","pop","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01e8a45a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wave.7cca2628.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.49c11397.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.5333c55f.svg\";","module.exports = __webpack_public_path__ + \"static/media/read.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noread.3c841bf6.svg\";","const initialState = {\n    items: [],\n    currentDialog: 'im',\n    firstLoaded: false\n};\n\nexport default (state = initialState, {type, payload}) => {\n    switch (type) {\n        case 'DIALOGS:SET_ITEMS':\n            return {\n                ...state,\n                items: payload,\n                firstLoaded: true\n            };\n        case 'DIALOGS:SET_CURRENT_DIALOG':\n            return {\n                ...state,\n                currentDialog: payload\n            };\n        default:\n            return state;\n    }\n}","const initialState = {\n    items: [],\n    isLoading: false\n};\n\nexport default (state = initialState, {type, payload}) => {\n    switch (type) {\n        case 'MESSAGES:SET_ITEMS':\n            return {\n                ...state,\n                items: payload,\n                isLoading: false\n            };\n        case 'MESSAGES:SET_IS_LOADING':\n            return {\n                ...state,\n                isLoading: payload\n            };\n        case 'MESSAGES:REMOVE_MESSAGE':\n            return {\n                ...state,\n                items: state.items.filter(message => message._id !== payload)\n            };\n        default:\n            return state;\n    }\n}","const initialState = {\n    data: null,\n    isAuth: !!window.localStorage.token,\n    token: window.localStorage.token\n};\n\nexport default (state = initialState, {type, payload}) => {\n    switch (type) {\n        case 'USER:SET_DATA':\n            return {\n                ...state,\n                data: payload,\n                isAuth: true,\n                token: window.localStorage.token\n            };\n        default:\n            return state;\n    }\n}","const initialState = {\n    items: []\n};\n\nexport default (state = initialState, {type, payload}) => {\n    switch (type) {\n        case 'FILE:ADD_ITEMS':\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    payload\n                ],\n            };\n        case 'FILE:REMOVE_ITEMS':\n            return {\n                ...state,\n                currentDialog: payload\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport dialogs from \"./dialogs\";\nimport messages from \"./messages\";\nimport user from \"./user\";\nimport files from \"./files\";\n\nexport default combineReducers({\n    dialogs,\n    messages,\n    user,\n    files\n})","import {applyMiddleware, createStore, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\n\nexport default store;","import React from 'react';\nimport { Button as BaseButton} from 'antd';\nimport classNames from 'classnames';\n\nimport './Button.scss';\n\nconst Button = (props) => {\n    return (\n        <BaseButton\n            {...props}\n            className={classNames('button', props.className, {'button--large' : props.size === 'large'})}\n        />\n    );\n};\n\nexport default Button;","import React from 'react';\nimport classNames from 'classnames';\n\nimport './AuthBlock.scss';\n\nconst AuthBlock = ({children, className}) => <div className={classNames(\"block\", className)}>{children}</div>;\n\nexport default AuthBlock;","export default (key, touched, errors) => {\n    return !touched[key] ? '' : errors[key] ? 'error' : 'success';\n}","import {notification} from 'antd';\n\nexport default ({text, title, type = 'info', duration = 2}) => notification[type]({\n    message: title,\n    description: text,\n    duration: duration\n});","import React, {useState, useRef, useEffect} from 'react';\nimport {Popover, Button} from 'antd';\nimport classNames from 'classnames';\n\nimport {Time, ReadIcon, Avatar} from '..';\nimport {convertCurrentTime} from '../../utils/helpers';\n\nimport waveSvg from '../../assets/img/wave.svg';\nimport playSVG from '../../assets/img/play.svg';\nimport pauseSVG from '../../assets/img/pause.svg';\n\nimport './Message.scss';\n\nconst AudioElem = ({audio}) => {\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    const audioElem = useRef(null);\n\n    const togglePlay = () => {\n        if (audioElem) {\n            if (!isPlaying) {\n                audioElem.current.play();\n            } else {\n                audioElem.current.pause();\n            }\n        }\n    };\n\n    useEffect(() => {\n        audioElem.current.addEventListener(\n            'playing',\n            () => {\n                setIsPlaying(true);\n            });\n        audioElem.current.addEventListener(\n            'ended',\n            () => {\n                setIsPlaying(false);\n                setProgress(0);\n            });\n        audioElem.current.addEventListener(\n            'pause',\n            () => {\n                setIsPlaying(false);\n            });\n        audioElem.current.addEventListener(\n            'timeupdate',\n            () => {\n                const duration = (audioElem.current && audioElem.current.duration) || 0;\n                setCurrentTime(audioElem.current.currentTime);\n                setProgress((audioElem.current.currentTime / duration) * 100);\n            })\n    }, []);\n\n    return (\n        <div className=\"message__audio\">\n            <audio ref={audioElem} src={audio} preload=\"auto\"/>\n            <div className=\"message__audio-progress\" style={{width: progress + '%'}}/>\n            <div className=\"message__audio-info\">\n                <div className=\"message__audio-btn\">\n                    <button onClick={togglePlay}>\n                        {isPlaying ?\n                            <img src={pauseSVG} alt={`waveSvg ${audio}`}/> :\n                            <img src={playSVG} alt={`waveSvg ${audio}`}/>\n                        }\n                    </button>\n                </div>\n                <div className=\"message__audio-wave\">\n                    <img src={waveSvg} alt={`waveSvg ${audio}`}/>\n                </div>\n                <span className=\"message__audio-duration\">{convertCurrentTime(currentTime)}</span>\n            </div>\n        </div>\n    );\n};\n\nconst Message = (props) => {\n    const {\n        user = {},\n        text,\n        read,\n        id,\n        date,\n        audio,\n        isMe,\n        onDeleteMessage,\n        attachments = [],\n        isTyping\n    } = props;\n\n    return (\n        <div className={classNames('message', {\n            \"message--isme\": isMe,\n            \"message--is-typing\": isTyping,\n            \"message--is-audio\": audio,\n            \"message--image\": attachments.length === 1\n        })}>\n            <div className=\"message__content\">\n                {isMe && <ReadIcon isRead={read}/>}\n                <Popover\n                    content={\n                        <div>\n                            <Button onClick={() => onDeleteMessage(id)} >Удалить сообщение</Button>\n                        </div>\n                    }\n                    trigger='click'\n                >\n                    <div className='message__icon-actions'>\n                        <Button type='link' icon='ellipsis'/>\n                    </div>\n                </Popover>\n                <div className=\"message__avatar\">\n                    <Avatar user={user}/>\n                </div>\n                <div className=\"message__info\">\n                    {(audio || text || isTyping) &&\n                    <div className=\"message__bubble\">\n                        {text && <p className=\"message__text\">{text}</p>}\n                        {isTyping && (\n                            <div className=\"message__typing\">\n                                <span/>\n                                <span/>\n                                <span/>\n                            </div>\n                        )}\n                        {audio && <AudioElem audio={audio}/>}\n                    </div>\n                    }\n                    <div className=\"message__attachments\">\n                        {\n                            attachments.map(item => (\n                                <div key={item.url} className=\"message__attachments-item\">\n                                    <img src={item.url} alt={item.filename}/>\n                                </div>\n                            ))\n                        }\n                    </div>\n                    {date &&\n                    <span className=\"message__date\">\n                        <Time date={date}/>\n                    </span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Message;","export default (number) => {\n    const mins = Math.floor(number / 60);\n    const secs = (number % 60).toFixed();\n    return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`\n}","export default (userTime) => {\n    let min = 5;\n    return (+Date.now() - new Date(userTime)) < (min * 60 * 1000);\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport format from 'date-fns/format';\nimport isToday from 'date-fns/isToday';\nimport {Link} from 'react-router-dom';\n\nimport isUserOnline from \"../../utils/isUserOnline\";\nimport {ReadIcon, Avatar} from '..';\n\nimport './DialogItem.scss';\n\nconst getMessageTime = date => {\n    const dateObj = new Date(date);\n    if (isToday(dateObj)) {\n        return format(dateObj, 'HH:mm');\n    } else {\n        return format(dateObj, 'dd.MM.yyyy');\n    }\n};\nconst DialogItem = props => {\n    const {\n        partner = {},\n        author = {},\n        userId,\n        message,\n        unread,\n        isMe,\n        id,\n        currentDialog\n    } = props;\n    return (\n        <Link to={`/dialog/${id}`}>\n            <div\n                className={classNames('dialogs__item', {\n                    'dialogs__item--online': isUserOnline(partner._id === userId ? author.last_seen : partner.last_seen),\n                    'active': currentDialog === id\n                })}\n            >\n                <div className=\"dialogs__item-avatar\">\n                    {<Avatar user={partner}/>}\n                </div>\n                <div className=\"dialogs__item-info\">\n                    <div className=\"dialogs__item-info-top\">\n                        <b>{partner._id === userId ? author.fullname : partner.fullname}</b>\n                        {message && <span>{getMessageTime(message.createdAt)}</span>}\n                    </div>\n                    <div className=\"dialogs__item-info-bottom\">\n                        {message && <p>{message.text}</p>}\n                        {unread === 0 && isMe && message && <ReadIcon isRead={message.unread}/>}\n                        {unread > 0 &&\n                        <div className=\"dialogs__item-info-bottom-count\">{unread > 9 ? '+9' : unread}</div>}\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n};\n\nexport default DialogItem;","import React, {Fragment} from 'react';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport rulocale from 'date-fns/locale/ru';\n\nconst Time = ({date}) => (\n    <Fragment>\n        {formatDistanceToNow(new Date(date), {addSuffix: true, locale: rulocale})}\n    </Fragment>\n);\n\nexport default Time;","import React from 'react';\nimport checkedSVG from \"../../assets/img/read.svg\";\nimport notCheckedSVG from \"../../assets/img/noread.svg\";\n\nconst ReadIcon = ({isRead}) =>\n    isRead ? (\n        <img className=\"message__icon-read\" src={checkedSVG} alt=\"Checked icon\"/>\n    ) : (\n        <img className=\"message__icon-read message__icon-read--no\" src={notCheckedSVG} alt=\"Checked icon\"/>\n    );\n\nexport default ReadIcon;","import React from 'react';\nimport {Input, Empty} from \"antd\";\n\nimport {DialogItem} from \"..\";\n\nimport './Dialogs.scss';\n\nconst Dialogs = ({ items, onSearch, inputValue, currentDialog, userId }) => {\n    items = items.sort((a, b) => new Date(b.date) - new Date(a.date));\n    console.log(items);\n    return (\n        <div className=\"dialogs\">\n            <div className=\"chat__sidebar-search\">\n                <Input.Search\n                    placeholder=\"Поиск среди контактов\"\n                    onChange={e => onSearch(e.target.value)}\n                    value={inputValue}\n                />\n            </div>\n            {items.length > 0 ? items.map(item => (\n                <DialogItem\n                    key={item._id}\n                    id={item._id}\n                    userId={userId}\n                    author={item.author}\n                    partner={item.partner}\n                    message={item.lastMessage}\n                    unread={0}\n                    onSearch={onSearch}\n                    currentDialog={currentDialog}\n                />\n            )) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'Нет диалогов'}/>}\n        </div>\n    );\n};\n\nexport default Dialogs;","import React from 'react';\nimport {generateAvatarFromHash} from \"../../utils/helpers\";\n\nimport './Avatar.scss';\n\nconst Avatar = ({user}) => {\n    if (user.avatar) {\n        return <img src={user.avatar} alt={`${user.avatar} avatar`}/>\n    } else {\n        const colors = generateAvatarFromHash(user._id);\n        const firstUserChar = user.fullname[0].toUpperCase();\n        return (\n            <div\n                className=\"avatar avatar--symbol\"\n                style={{background: `linear-gradient(135deg,${colors.color} 0%,${colors.colorLighten} 96.52%)`}}\n            >\n                {firstUserChar}\n            </div>\n        )\n    }\n};\n\nexport default Avatar;","import tinycolor from 'tinycolor2';\n\nexport default hash => {\n    const [r, g, b] = hash\n        .substr(-3,3)\n        .split('')\n        .map(char => char.charCodeAt(0) > 255 ? 255 : char.charCodeAt(0));\n    const color = tinycolor({r, g, b});\n    const colorLighten = tinycolor({r, g, b}).lighten(40);\n    return {color: color.toHexString(), colorLighten: colorLighten.toHexString()};\n};","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Status.scss';\n\nconst Status = ({online, fullname}) => {\n    return (\n        <div className=\"chat__dialog-header-center\">\n            <b className=\"chat__dialog-header-username\">{fullname}</b>\n            <div className=\"chat__dialog-header-status\">\n                <span className={classNames('status', {'status--online': online})}>{online ? 'онлайн' : 'офлайн'}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Status;","import React, {useState} from 'react';\nimport {Button, Input} from \"antd\";\n\nimport './ChatInput.scss';\n\nconst ChatInput = (props) => {\n\n    const {\n        onSendMessage\n    } = props;\n\n    const [value, setValue] = useState('');\n\n    return (\n        <div className=\"chat-input\">\n            <Input\n                onKeyUp={e => {\n                    e.keyCode === 13 && onSendMessage(value);\n                    e.keyCode === 13 && setValue('');\n                }}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                size='large'\n                placeholder='Введите текст сообщения...'\n            />\n            <div className=\"chat-input__actions\">\n                <Button\n                    type='ghost'\n                    icon='message'\n                    onClick={() => {\n                        onSendMessage(value);\n                        setValue('');\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ChatInput;","import React from 'react';\nimport {Empty, Spin} from \"antd\";\n\nimport {Message} from \"..\";\n\nimport './Messages.scss';\n\nconst Messages = props => {\n    const {\n        blockRef,\n        items,\n        currentUser,\n        onDeleteMessage,\n        isLoading\n    } = props;\n\n    return <div ref={blockRef} className=\"messages__block\">\n        {isLoading ? (\n                <div className='messages--loading'>\n                    <Spin tip=\"Загрузка сообщений...\"/>\n                </div>\n            )\n            : items.length > 0 ? items.map(item => (\n                    <Message\n                        key={item._id}\n                        id={item._id}\n                        user={item.user}\n                        date={item.date}\n                        text={item.text}\n                        read={item.read}\n                        onDeleteMessage={onDeleteMessage}\n                        isMe={currentUser._id === item.user._id}\n                    />))\n                :\n                <Empty description={'Нет ни одного сообщения'}/>}\n        </div>\n};\n\nexport default Messages;","import axios from 'axios';\n\naxios.defaults.baseURL = window.location.origin;\naxios.defaults.headers.common['token'] = localStorage.token;\n\nexport default axios;","import {axios} from '../../core';\n\nexport default {\n    getAll: () => axios.get('/dialogs'),\n    create: (partnerId, text) => axios.post('/dialogs', {partner: partnerId, text: text}),\n}","import {axios} from '../../core';\n\nexport default {\n    getAll: id => axios.get(`/messages?dialog=${id}`),\n    send: (text, dialogId) => axios.post('/messages', {\n        'text': text,\n        'dialog_id': dialogId\n    }),\n    removeById: (id) => axios.delete(`/messages/${id}`)\n}","import {axios} from '../../core';\n\nexport default {\n    login: (values) => axios.post('/user/login', values),\n    getMe: () => axios.get('user/me'),\n    register: (values) => axios.post('/user/register', values),\n    verify: (value) => axios.get(`/user/verify?hash=${value}`),\n    findUsers: (name) => axios.get(`/user/find?query=${name}`),\n}","import React, {Fragment, useEffect, useState} from 'react';\nimport {Icon, Spin} from \"antd\";\nimport {userApi} from '../../utils/api';\n\nimport {Block, Button} from '../../components';\n\n\nimport './VerifyForm.scss';\n\nconst VerifyForm = props => {//close\n    const {location, history} = props;\n    const hash = location.search && location.search.split('=')[1];\n\n    const [loading, setLoading] = useState(true);\n    const [verified, setVerified] = useState(false);\n\n    useEffect(() => {\n        if (loading) {\n            userApi.verify(hash).then(data => {\n                setLoading(false);\n                setVerified(true);\n            }).catch(err => {\n                setLoading(false);\n                setVerified(false);\n            })\n        }\n    });\n\n    const handleClick = () => {\n      history.push('/login');\n    };\n\n    if (loading) {\n        const antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\n        return (\n            <div className=\"verify\">\n                <Block className='block__spinner'>\n                    <Spin indicator={antIcon}/>\n                </Block>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"verify\">\n            <Block>\n                <div className=\"verify__success-block\">\n                    {verified ? (\n                        <Fragment>\n                            <div>\n                                <Icon type=\"check-circle\" theme=\"twoTone\"/>\n                            </div>\n                            <h2> Вы успешно подтвердили почту!</h2>\n                             <br/>\n                            <Button onClick={handleClick} type=\"primary\">Войти</Button>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <div>\n                                <Icon type=\"close-circle\" theme=\"twoTone\"/>\n                            </div>\n                            <h2>Пользователь не подтвержден</h2>\n                        </Fragment>\n                    )\n                    }\n                </div>\n            </Block>\n        </div>\n    )\n};\n\nexport default VerifyForm;","import io from 'socket.io-client';\n\nconst socket = io(window.location.origin.replace('3000', '3030'));\nconsole.log(socket);\n\nexport default socket;","import { dialogsApi } from \"../../utils/api\";\n\nconst actions = {\n    setDialogs: items => ({\n        type: 'DIALOGS:SET_ITEMS',\n        payload: items\n    }),\n    fetchDialogs: () => dispatch => {\n        dialogsApi.getAll().then(({ data }) => {\n            dispatch(actions.setDialogs(data));\n        });\n    },\n    setCurrentDialog: id => ({\n        type: 'DIALOGS:SET_CURRENT_DIALOG',\n        payload: id\n    })\n};\n\nexport default actions;","import {messagesApi} from \"../../utils/api\";\n\nconst actions = {\n    setMessages: items => ({\n        type: 'MESSAGES:SET_ITEMS',\n        payload: items\n    }),\n    setIsLoading: bool => ({\n        type: 'MESSAGES:SET_IS_LOADING',\n        payload: bool\n    }),\n    removeMessage: id => ({\n        type: 'MESSAGES:REMOVE_MESSAGE',\n        payload: id\n    }),\n    addMessage: (dialogId) => dispatch => {\n        messagesApi.getAll(dialogId)\n            .then(({data}) => {\n                dispatch(actions.setMessages(data));\n            })\n    },\n    removeMessageById: (id) => dispatch => {\n        if (window.confirm('Вы действительно хотите удалить сообщение?')) {\n            messagesApi.removeById(id)\n                .then(({data}) => {\n                    dispatch(actions.removeMessage(id));\n                })\n                .catch(err => {\n                    console.log('Cannot remove message');\n                })\n        }\n    },\n    fetchSendMessage: text => (dispatch, getState) => {\n        const {dialogs} = getState();\n        text && dialogs.currentDialog && messagesApi.send(text, dialogs.currentDialog);\n    },\n    fetchMessages: (dialogId) => dispatch => {\n        dispatch(actions.setIsLoading(true));\n        messagesApi.getAll(dialogId)\n            .then(({data}) => {\n                dispatch(actions.setMessages(data));\n            }).catch(() => {\n            dispatch(actions.setIsLoading(false))\n        })\n    }\n};\n\nexport default actions;","import {userApi} from \"../../utils/api\";\nimport {openNotification} from \"../../utils/helpers\";\nimport axios from \"axios\";\n\nconst actions = {\n    setUserData: items => ({\n        type: 'USER:SET_DATA',\n        payload: items\n    }),\n    fetchUserData: () => dispatch => {\n        userApi.getMe().then(({data}) => dispatch(actions.setUserData(data)));\n    },\n    fetchUserRegister: (setSubmitting, setStatus, postData) => dispatch => {\n        return userApi.register(postData).then(({data}) => {\n            const {status} = data;\n            if (status === 'error') {\n                setStatus('');\n                openNotification({\n                    title: \"Регистрация неуспешна\",\n                    text: \"Ошибка при регистрации\",\n                    type: \"error\"\n                });\n            } else {\n                setStatus('success');\n            }\n        })\n            .catch(err => {\n                const data = err.response.data;\n                if (data.message && (data.message.code === 11000)) {\n                    setStatus('user_found');\n                } else {\n                    setStatus('error');\n                }\n            });\n    },\n    fetchUserLogin: (setSubmitting, setStatus, postData) => dispatch => {\n        return userApi.login(postData).then(({data}) => {\n            const {status, token} = data;\n            if (status === 'error') {\n                setStatus('');\n                openNotification({\n                    title: \"Ошибка при авторизации\",\n                    text: \"Неверный логин или пароль\",\n                    type: \"error\"\n                });\n            } else {\n                setStatus('');\n                openNotification({\n                    title: \"Отлично\",\n                    text: \"Авторизация успешна\",\n                    type: \"success\"\n                });\n                dispatch(actions.setUserData(data));\n                localStorage.token = token;\n                axios.defaults.headers.common['token'] = localStorage.token;\n                dispatch(actions.fetchUserData());\n            }\n        })\n            .catch(err => {\n                setStatus('error');\n            });\n    }\n};\n\nexport default actions;","import React, {useState, useEffect} from 'react';\nimport {connect} from \"react-redux\";\n\nimport socket from '../core/socket';\nimport {dialogsActions} from \"../redux/actions\";\nimport {Dialogs as BaseDialogs} from '../components';\n\nconst Dialogs = props => {\n    const {\n        fetchDialogs,\n        items,\n        data,\n        currentDialog,\n        firstLoaded\n    } = props;\n\n    const userId = data && data._id;\n    const [inputValue, setValue] = useState('');\n    const [filterArray, setFilteredArray] = useState(Array.from(items));\n\n    const onChangeInput = value => {\n        setFilteredArray(items.filter(\n            dialog => dialog.partner.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0\n        ));\n        setValue(value);\n    };\n\n    useEffect(() => {\n        if (!items.length && !firstLoaded) {\n            fetchDialogs();\n\n            socket.on(\"SERVER:DIALOG_CREATED\", () => {\n                fetchDialogs();\n            });\n\n        } else {\n            setFilteredArray(items);\n        }\n    }, [fetchDialogs, items, firstLoaded]);\n\n    return (\n        <BaseDialogs\n            items={filterArray}\n            userId={userId}\n            onSearch={onChangeInput}\n            inputValue={inputValue}\n            currentDialog={currentDialog}\n        />\n    )\n\n};\n\nexport default connect(\n    ({dialogs, user}) => ({...user, ...dialogs}),\n    dialogsActions\n)(Dialogs);","import React, {useEffect, useRef} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Empty} from 'antd';\n\nimport {messagesActions} from \"../redux/actions\";\n\nimport {Messages as BaseMessages} from \"../components\";\nimport socket from \"../core/socket\";\n\nconst Messages = props => {\n\n    const messagesRef = useRef(null);\n\n    const {\n        items,\n        currentDialog,\n        fetchMessages,\n        data,\n        addMessage,\n        removeMessageById,\n        isLoading\n    } = props;\n\n    console.log(props);\n\n    useEffect(() => {\n        if (currentDialog !== 'im') {\n            fetchMessages(currentDialog);\n\n            socket.on(\"SERVER:NEW_MESSAGE\", () => {\n                addMessage(currentDialog);\n            });\n\n        }\n\n        return () => {\n            socket.removeListener('SERVER:NEW_MESSAGE');\n        }\n\n    }, [currentDialog, fetchMessages, addMessage]);\n\n    useEffect(() => {\n        if (messagesRef.current) {\n            messagesRef.current.scrollTo(0, 9999999);\n        }\n    }, [items]);\n\n    if (currentDialog === 'im') {\n        return <Empty description={'Откройте диалог'}/>;\n    }\n\n    return (\n            <BaseMessages\n                blockRef={messagesRef}\n                onDeleteMessage={removeMessageById}\n                items={items}\n                currentUser={data}\n                isLoading={isLoading}\n            />\n    );\n};\n\nexport default connect(\n    ({dialogs, messages, user}) => ({currentDialog: dialogs.currentDialog, ...messages, ...user}),\n    messagesActions\n)(Messages);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {ChatInput as BaseChatInput} from \"../components\";\nimport {messagesActions} from '../redux/actions'\n\nconst ChatInput = props => {\n    const {\n        fetchSendMessage\n    } = props;\n\n    const onSendMessage = (text) => {\n        fetchSendMessage(text);\n    };\n\n    return (\n        <BaseChatInput onSendMessage={onSendMessage}/>\n    );\n};\n\nexport default connect(\n    null,\n    messagesActions\n)(ChatInput);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {Status as BaseStatus} from \"../components\";\nimport isUserOnline from \"../utils/isUserOnline\";\n\nconst Status = props => {\n    const {\n        dialogs,\n        user\n    } = props;\n\n    console.log(user);\n\n    if (!dialogs.items.length || dialogs.currentDialog === 'im') {\n        return (\n            <div className=\"chat__dialog-header-center\">\n                <b className=\"chat__dialog-header-username status__username\">Hello, {user ? user.fullname : 'username'}</b>\n            </div>\n        );\n    }\n\n    let online = false;\n    const currentDialog = dialogs.items.find(dialog => dialog._id === dialogs.currentDialog);\n\n    if (currentDialog.author._id === user._id) {\n        online = isUserOnline(currentDialog.partner.last_seen);\n    } else {\n        online = isUserOnline(currentDialog.author.last_seen);\n    }\n\n    return (\n        <BaseStatus online={online}\n                    fullname={currentDialog.partner._id === user._id ?\n                        currentDialog.author.fullname :\n                        currentDialog.partner.fullname}\n        />\n    );\n};\n\nexport default connect(\n    ({dialogs, user}) => ({\n        dialogs,\n        user: user.data\n    }),\n)(Status);","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport {dialogsApi, userApi} from '../utils/api';\nimport {Sidebar as BaseSidebar} from \"../components\";\n\nconst Sidebar = props => {\n\n    const [visible, setVisible] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const [users, setUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedUserId, setSelectedUserId] = useState('');\n    const [messageText, setMessageText] = useState('');\n\n    const onClose = () => {\n        setVisible(false);\n        setInputValue('');\n        setMessageText('');\n    };\n\n    const handleChangeInput = (value) => {\n        setInputValue(value)\n    };\n\n    const onSearch = (value) => {\n        setIsLoading(true);\n        userApi.findUsers(value)\n            .then(({data}) => {\n                setUsers(data);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                setIsLoading(false);\n            })\n    };\n\n    const onSelectUser = userId => {\n        setSelectedUserId(userId);\n    };\n\n    const onAddDialog = () => {\n        setIsLoading(true);\n        if (messageText) {\n            dialogsApi\n                .create(selectedUserId, messageText)\n                .then(({data}) => {\n                    setIsLoading(false);\n                    setMessageText('');\n                    setInputValue('');\n                    onClose();\n                })\n                .catch(() => {\n                    setIsLoading(false);\n                })\n        }\n        setIsLoading(false);\n    };\n\n    return (\n        <BaseSidebar\n            inputValue={inputValue}\n            visible={visible}\n            isLoading={isLoading}\n            onClose={onClose}\n            onSelectUser={onSelectUser}\n            setVisible={setVisible}\n            setInputValue={setInputValue}\n            setMessageText={setMessageText}\n            messageText={messageText}\n            onChangeInput={handleChangeInput}\n            onSearch={onSearch}\n            users={users}\n            onAddDialog={onAddDialog}\n        />\n    );\n};\n\nexport default connect()(Sidebar);","import React from 'react';\nimport {Icon, Modal, Select, Input} from \"antd\";\n\nimport {Dialogs} from \"../../containers\";\n\nconst {Option} = Select;\nconst {TextArea} = Input;\n\nconst Sidebar = props => {\n    const {\n        visible,\n        inputValue,\n        messageText,\n        setVisible,\n        setMessageText,\n        isLoading,\n        onClose,\n        onChangeInput,\n        onSearch,\n        onSelectUser,\n        onAddDialog,\n        users=[]\n    } = props;\n\n    const options = users.map(user => <Option key={user._id}>{user.fullname}</Option>);\n\n    return (\n        <div className=\"chat__sidebar\">\n            <div className=\"chat__sidebar-header\">\n                <div>\n                    <Icon type=\"team\"/>\n                    <span>Список диалогов</span>\n                </div>\n                <Icon onClick={() => setVisible(true)} type=\"form\"/>\n            </div>\n            <div className=\"chat__sidebar-dialogs\">\n                <Dialogs/>\n            </div>\n            <Modal\n                title='Создать диалог'\n                visible={visible}\n                onOk={onAddDialog}\n                onCancel={onClose}\n                okText='Создать'\n                cancelText='Закрыть'\n                confirmLoading={isLoading}\n            >\n                <p>Введите имя или e-mail пользователя:</p>\n                <Select\n                    value={inputValue}\n                    style={{ width: '100%' }}\n                    onSearch={onSearch}\n                    onChange={onChangeInput}\n                    onSelect={onSelectUser}\n                    notFoundContent={null}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    filterOption={false}\n                    showSearch\n                >\n                    {options}\n                </Select>\n                <br />\n                <br />\n                <p>Введите текст сообщения:</p>\n                <TextArea\n                    onChange={e => setMessageText(e.target.value)}\n                    value={messageText}\n                    autoSize={{ minRows: 3, maxRows: 5 }}\n                />\n            </Modal>\n        </div>\n    );\n};\n\nexport default Sidebar;","import React from 'react';\nimport { Upload, Icon, Modal } from 'antd';\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nclass UploadFiles extends React.Component {\n    state = {\n        previewVisible: false,\n        previewImage: '',\n        fileList: [\n            {\n                uid: '-1',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-2',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-3',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-4',\n                name: 'image.png',\n                status: 'done',\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n            },\n            {\n                uid: '-5',\n                name: 'image.png',\n                status: 'error',\n            },\n        ],\n    };\n\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n\n    handleChange = ({ fileList }) => this.setState({ fileList });\n\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        return (\n            <div className=\"clearfix\">\n                <Upload\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    listType=\"picture-card\"\n                    fileList={fileList}\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                >\n                    {fileList.length >= 8 ? null : uploadButton}\n                </Upload>\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default UploadFiles;","import React from 'react';\nimport {Form, Icon, Input} from \"antd\";\nimport {Block, Button} from \"../../../components\";\nimport {Link} from 'react-router-dom';\nimport {validateField} from '../../../utils/helpers';\n\nconst LoginForm = props => {\n    const {\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        status\n    } = props;\n    return (\n        <div>\n            <div className=\"auth__top\">\n                <h2>Войти в аккаунт</h2>\n                <p>Пожалуйста, войдите в свой аккаунт</p>\n            </div>\n            <Block>\n                <Form className=\"login-form\">\n                    <Form.Item\n                        validateStatus={validateField('email', touched, errors)}\n                        hasFeedback\n                        help={!touched.email ? '' : errors.email}\n                    >\n                        <Input\n                            id=\"email\"\n                            prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"E-mail\"\n                            size=\"large\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        validateStatus={validateField('password', touched, errors)}\n                        hasFeedback\n                        help={!touched.password ? '' : errors.password}\n                    >\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\"\n                            placeholder=\"Пароль\"\n                            size=\"large\"\n                            id=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        validateStatus={\"error\"}\n                        help={status === \"error\" ? \"Some errors\" : ''}\n                    >\n                        <Button onClick={handleSubmit} type=\"primary\" size=\"large\">\n                            Войти в аккаунт\n                        </Button>\n                    </Form.Item>\n                    <Link className=\"auth__register-link\" to=\"/register\">\n                        Зарегистрироваться\n                    </Link>\n                </Form>\n            </Block>\n        </div>\n    );\n};\n\nexport default LoginForm;","export default ({isAuth, values, errors}) => {\n\n    const rules = {\n        email: (value) => {\n            if (!value) {\n                errors.email = 'Введите e-mail';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n                errors.email = 'Неверно введен e-mail';\n            }\n        },\n        password: (value) => {\n            if (!value) {\n                errors.password = 'Введите пароль';\n            } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/i.test(value) && !isAuth) {\n                    errors.password = 'Пароль должен содержать цифру и букву';\n            }\n        },\n        fullname: (value) => {\n            if (!value) {\n                errors.fullname = 'Введите имя';\n            }\n        },\n        password2: (value) => {\n            if (!value) {\n                errors.password2 = 'Повторите пароль';\n            } else if (value !== values.password) {\n                errors.password2 = 'Пароли не совпадают';\n            }\n        }\n    };\n\n    Object.keys(values).forEach(\n        key => rules[key] && rules[key](values[key])\n    );\n};","import LoginForm from './containers/LoginForm';\n\nexport default LoginForm;","import {withFormik} from 'formik';\nimport LoginForm from \"../components/LoginForm\";\nimport validateForm from \"../../../utils/validate\";\n\nimport store from '../../../redux/store';\nimport {userActions} from \"../../../redux/actions\";\n\nexport default withFormik({\n    mapPropsToValues: () => ({\n            email: '',\n            password: ''\n        }\n    ),\n\n    validate: values => {\n        let errors = {};\n\n        validateForm({isAuth: true, values, errors});\n\n        return errors;\n    },\n\n    handleSubmit: (values, {setSubmitting, setStatus}) => {\n        return store.dispatch(userActions.fetchUserLogin(setSubmitting, setStatus, values));\n    },\n\n    displayName: 'LoginForm',\n})(LoginForm);","import React from 'react';\nimport {Form, Icon, Input} from \"antd\";\nimport {Block, Button} from \"../../../components\";\nimport {Link} from 'react-router-dom';\nimport {validateField} from \"../../../utils/helpers\";\n\nconst RegisterForm = props => {\n    const {\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        status,\n    } = props;\n    return (\n        <div>\n            {!(status === 'success') ? (<div className=\"auth__top\">\n                <h2>Регистрация</h2>\n                <p>Для входа в чат, вам нужно зарегистрироваться</p>\n            </div>) : (<div className=\"auth__top\">\n                        <h2>Регистрация прошла успешно!</h2>\n                    </div>)}\n            <Block>\n                {!(status === 'success') ? (\n                    <Form className=\"login-form\">\n                        <Form.Item\n                            validateStatus={validateField('email', touched, errors)}\n                            hasFeedback\n                            help={!touched.email ? '' : errors.email}\n                        >\n                            <Input\n                                id=\"email\"\n                                prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"E-mail\"\n                                size=\"large\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={validateField('fullname', touched, errors)}\n                            hasFeedback\n                            help={!touched.fullname ? '' : errors.fullname}\n                        >\n                            <Input\n                                id=\"fullname\"\n                                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"Ваше имя\"\n                                size=\"large\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={validateField('password', touched, errors)}\n                            hasFeedback\n                            help={!touched.password ? '' : errors.password}\n                        >\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                type=\"password\"\n                                placeholder=\"Пароль\"\n                                size=\"large\"\n                                id=\"password\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={validateField('password2', touched, errors)}\n                            hasFeedback\n                            help={!touched.password2 ? '' : errors.password2}\n                        >\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                type=\"password\"\n                                placeholder=\"Повторите пароль\"\n                                size=\"large\"\n                                id=\"password2\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={\"error\"}\n                            help={status === \"error\" ? 'Some errors' : status === \"user_found\" ? 'E-mail уже зарегистрирован' : ''}\n                        >\n                            <Button onClick={handleSubmit} type=\"primary\" size=\"large\">\n                                Зарегистрироваться\n                            </Button>\n                        </Form.Item>\n                        <Link className=\"auth__register-link\" to=\"/login\">\n                            Войти в аккаунт\n                        </Link>\n                    </Form>) : (\n                    <div className=\"auth__success-block\">\n                        <div>\n                            <Icon type=\"info-circle\" theme=\"twoTone\"/>\n                        </div>\n                        <h2>Подтвердите свой аккаунт</h2>\n                        <br/>\n                        <br/>\n                        <p>На Вашу почту отправлено письмо с ссылкой для подтверждения аккаунта.</p>\n                    </div>\n                )}\n            </Block>\n        </div>\n    );\n};\n\nexport default RegisterForm;","import RegisterForm from './containers/RegisterForm';\n\nexport default RegisterForm;","import { withFormik } from 'formik';\nimport RegisterForm from \"../components/RegisterForm\";\nimport validateForm from \"../../../utils/validate\";\nimport store from \"../../../redux/store\";\nimport {userActions} from \"../../../redux/actions\";\n\nexport default withFormik({\n    mapPropsToValues: () => ({\n        email: '',\n        password: '',\n        fullname: '',\n        password2: '',\n    }),\n\n    validate: values => {\n        let errors = {};\n        validateForm({isAuth: false, values, errors});\n        return errors;\n    },\n\n    handleSubmit: (values, { setSubmitting, setStatus }) => {\n        return store.dispatch(userActions.fetchUserRegister(setSubmitting, setStatus, values));\n    },\n\n    displayName: 'RegisterForm',\n})(RegisterForm);","import React from 'react';\nimport {Route} from 'react-router-dom';\n\nimport {LoginForm, RegisterForm} from '../../modules';\n\nimport './Auth.scss';\n\nconst Auth = () => {\n    return (\n        <section className=\"auth\">\n            <div className=\"auth__content\">\n                <Route exact path={[\"/\", \"/login\"]} component={LoginForm}/>\n                <Route exact path=\"/register\" component={RegisterForm}/>\n            </div>\n        </section>\n    )\n};\n\nexport default Auth;","import React, {useEffect} from 'react';\nimport {withRouter} from 'react-router';\nimport {connect} from 'react-redux';\nimport {Icon} from 'antd';\n\nimport {Messages, ChatInput, Status, Sidebar} from \"../../containers\";\n\nimport './Home.scss';\nimport {dialogsActions} from \"../../redux/actions\";\n\nconst Home = (props) => {\n\n    const {setCurrentDialog} = props;\n\n    useEffect(() => {\n        const {location: {pathname}} = props;\n        const dialogId = pathname.split('/').pop();\n\n        setCurrentDialog(dialogId);\n\n    }, [props, setCurrentDialog]);\n\n    return (\n        <section className=\"home\">\n            <div className=\"chat\">\n                <Sidebar/>\n                <div className=\"chat__dialog\">\n                    <div className=\"chat__dialog-header\">\n                        <div/>\n                        <Status/>\n                        <Icon type='ellipsis' style={{fontSize: '22px'}}/>\n                    </div>\n                    <div className=\"chat__dialog-messages\">\n                        <Messages/>\n                    </div>\n                    <div className=\"chat__dialog-input\">\n                        <ChatInput/>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n};\n\nexport default withRouter(connect(\n    ({dialogs}) => dialogs,\n    dialogsActions\n)(Home));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Route, Redirect} from 'react-router-dom';\n\nimport {Auth, Home} from './pages';\nimport {VerifyForm} from \"./components\";\n\nconst App = props => {\n    const {isAuth} = props;\n    return (\n        <div className=\"wrapper\">\n            {isAuth ? <Redirect to='/im'/> :\n                window.location.pathname === '/verify' ?\n                    <Route path=\"/verify\" component={VerifyForm}/> :\n                    <Redirect to='/login'/>\n            }\n            <Route exact path={[\"/\", \"/login\", \"/register\"]} component={Auth}/>\n            <Route exact path={[\"/im\", \"/dialog/:id\"]} component={Home}/>\n        </div>\n    );\n};\n\nexport default connect(({user}) => ({isAuth: user.isAuth}))(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport './core/socket';\nimport {userActions} from './redux/actions';\n\nimport './styles/index.scss';\nimport 'emoji-mart/css/emoji-mart.css';\n\nstore.dispatch(userActions.fetchUserData());\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}